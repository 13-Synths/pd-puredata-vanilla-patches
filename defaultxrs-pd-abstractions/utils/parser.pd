#N canvas 1680 29 1600 871 10;
#X obj 200 46 inlet;
#X text 297 35 parser - takes lists or symbols for input and evaluates
"functions" \, replacing them with their result.;
#X obj 200 65 list;
#X obj 200 84 t a b;
#X msg 200 236 _;
#X msg 227 216 set;
#X msg 200 197 add2 \$1;
#X obj 200 103 list-drip;
#N canvas 2480 29 800 871 functions 0;
#X obj 109 62 inlet;
#X msg 100 611;
#X obj 100 630 l2s;
#X msg 124 630 symbol;
#X obj 170 630 loadbang;
#X obj 109 139 list-drip;
#X obj 109 158 sel ( );
#X obj 109 120 t a b;
#X msg 100 382 add2 \$1;
#X msg 151 189 0;
#X msg 123 189 1;
#X obj 100 294 prepent 0;
#X obj 100 313 route 0 1;
#X obj 151 234 f;
#X obj 175 234 f;
#X msg 175 272 bang \, set;
#X msg 125 453 add2 \$1;
#X obj 125 491 l2s;
#X msg 149 491 symbol;
#X obj 195 491 loadbang;
#N canvas 800 0 800 410 function 0;
#X obj 60 95 inlet;
#X msg 60 187 add2 \$1;
#X obj 60 133 route float;
#X obj 179 124 inlet;
#X obj 69 161 symbol;
#X obj 60 242 route rr rc map;
#X obj 60 326 outlet;
#X obj 89 280 rchoice;
#X obj 60 261 rrange;
#X msg 60 223;
#X obj 60 114 fromsymbol;
#X msg 179 143 bang \, set;
#X connect 0 0 10 0;
#X connect 1 0 9 0;
#X connect 2 0 1 0;
#X connect 2 1 4 0;
#X connect 3 0 11 0;
#X connect 4 0 1 0;
#X connect 5 0 8 0;
#X connect 5 1 7 0;
#X connect 7 0 6 0;
#X connect 8 0 6 0;
#X connect 9 0 5 0;
#X connect 10 0 2 0;
#X connect 11 0 9 0;
#X restore 125 510 pd function;
#X obj 175 253 sel 0 1;
#X obj 100 332 route float;
#X obj 108 357 symbol;
#X obj 133 428 symbol;
#X obj 125 401 route float;
#X msg 125 581 add2 \$1;
#X obj 125 529 route float;
#X obj 133 556 symbol;
#X msg 202 325 bang \, set;
#X msg 125 472;
#X obj 109 101 chars;
#X obj 248 142 t b b b;
#X obj 197 420 t b b;
#X obj 197 401 sel 0;
#X obj 248 123 inlet;
#X obj 100 719 outlet;
#X obj 100 649 fromsymbol;
#X obj 100 668 route float;
#X obj 163 687 symbol;
#X connect 0 0 31 0;
#X connect 1 0 2 0;
#X connect 2 0 37 0;
#X connect 3 0 2 1;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 5 1 14 0;
#X connect 6 0 10 0;
#X connect 6 1 9 0;
#X connect 6 2 11 0;
#X connect 7 0 5 0;
#X connect 8 0 1 0;
#X connect 9 0 13 0;
#X connect 10 0 13 0;
#X connect 11 0 12 0;
#X connect 12 0 22 0;
#X connect 12 1 25 0;
#X connect 13 0 14 1;
#X connect 13 0 11 1;
#X connect 13 0 34 0;
#X connect 14 0 21 0;
#X connect 15 0 1 0;
#X connect 16 0 30 0;
#X connect 17 0 20 0;
#X connect 18 0 17 1;
#X connect 19 0 18 0;
#X connect 20 0 27 0;
#X connect 21 0 15 0;
#X connect 21 1 29 0;
#X connect 22 0 8 0;
#X connect 22 1 23 0;
#X connect 23 0 8 0;
#X connect 24 0 16 0;
#X connect 25 0 16 0;
#X connect 25 1 24 0;
#X connect 26 0 1 0;
#X connect 27 0 26 0;
#X connect 27 1 28 0;
#X connect 28 0 26 0;
#X connect 29 0 30 0;
#X connect 30 0 17 0;
#X connect 31 0 7 0;
#X connect 32 0 15 0;
#X connect 32 1 29 0;
#X connect 32 2 9 0;
#X connect 33 0 20 1;
#X connect 33 1 29 0;
#X connect 34 0 33 0;
#X connect 35 0 32 0;
#X connect 37 0 38 0;
#X connect 38 0 36 0;
#X connect 38 1 39 0;
#X connect 39 0 36 0;
#X restore 200 122 pd functions;
#X obj 200 255 outlet;
#X text 297 96 rr - random range. takes two arguments: bottom of range
\, top of range.;
#X text 298 125 rc - random choice. takes many arguments \, each one
a possible choice.;
#X text 296 66 functions are in lisp s-expr form: (function argument1
argument2);
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 3 1 5 0;
#X connect 4 0 9 0;
#X connect 5 0 4 0;
#X connect 6 0 4 0;
#X connect 7 0 8 0;
#X connect 7 1 4 0;
#X connect 8 0 6 0;
